@using JULONG.TRAIN.Model;

@model Exam
@{

    string[] abc = new String[] { "A", "B", "C", "D", "E", "D", "F" };
    var kk = 0;
    var jj = 1;
    string[] kks = new String[] { "一", "二", "三", "四", "五", "六", "七", "八", "九", "十" };
}

 <ul id="qList" class="q-list" onclick="Test.doingQuestion(event)">
                    @foreach (var part in Model.Parts.Where(d => !d.IsDisabled).OrderByDescending(d => d.Index))
                    {
                        <li class="q-part">@kks[kk]、 @part.Name</li>
                        foreach (var item in part.Questions.Where(d => !d.IsDisabled).OrderByDescending(d => d.Index))
                        {
                            List<int> an = new List<int>();
                            var answers = item.Answers;
                            <li class="q-item" an="">
                                <a class="q-i">@jj</a>
                                <div class="q-c">
                                    @Html.Raw(@item.Content)
                                </div>
                                <div class="q-a-list">
                                    @for (int i = 0; i < answers.Count; i++)
                                    {
                                        if (answers[i].isValid)
                                        {
                                            an.Add(i);
                                        }
                                        <label class="q-a">

                                            @if (item.Type == QuestionType.单选 || item.Type == QuestionType.判断)
                                            {
                                                <input name="answersR@(jj)" type="radio" value="@(i+1)" />
                                            }
                                            else
                                            {
                                                <input name="answersR@(jj)" type="checkbox" value="@(i+1)" />
                                            }
                                            @if (item.Type == QuestionType.判断)
                                            {

                                                <span id="Answers[@i]" class="q-a-i">@answers[i].text</span>
                                            }
                                            else
                                            {
                                                <span class="q-a-i">
                                                    @(abc[i])
                                                </span>
                                                <span id="Answers[@i]">@answers[i].text</span>
                                            }


                                        </label>
                                    }
                                </div>
                            </li>
                            jj++;
                            //TrueAnswerIndexs.Add(new ExamQuestionAnswersValue() { Value = item.Value});
                        }

                        kk++;
                    }
                </ul>
